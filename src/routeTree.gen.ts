/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TemuImport } from './routes/temu'
import { Route as PrivacyPolicyImport } from './routes/privacy-policy'
import { Route as DealsImport } from './routes/deals'
import { Route as AmazonImport } from './routes/amazon'
import { Route as AliexpressImport } from './routes/aliexpress'
import { Route as AffiliateDisclosureImport } from './routes/affiliate-disclosure'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminInitKvImport } from './routes/admin/init-kv'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'

// Create/Update Routes

const TemuRoute = TemuImport.update({
  id: '/temu',
  path: '/temu',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyPolicyRoute = PrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const DealsRoute = DealsImport.update({
  id: '/deals',
  path: '/deals',
  getParentRoute: () => rootRoute,
} as any)

const AmazonRoute = AmazonImport.update({
  id: '/amazon',
  path: '/amazon',
  getParentRoute: () => rootRoute,
} as any)

const AliexpressRoute = AliexpressImport.update({
  id: '/aliexpress',
  path: '/aliexpress',
  getParentRoute: () => rootRoute,
} as any)

const AffiliateDisclosureRoute = AffiliateDisclosureImport.update({
  id: '/affiliate-disclosure',
  path: '/affiliate-disclosure',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AdminInitKvRoute = AdminInitKvImport.update({
  id: '/admin/init-kv',
  path: '/admin/init-kv',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/affiliate-disclosure': {
      id: '/affiliate-disclosure'
      path: '/affiliate-disclosure'
      fullPath: '/affiliate-disclosure'
      preLoaderRoute: typeof AffiliateDisclosureImport
      parentRoute: typeof rootRoute
    }
    '/aliexpress': {
      id: '/aliexpress'
      path: '/aliexpress'
      fullPath: '/aliexpress'
      preLoaderRoute: typeof AliexpressImport
      parentRoute: typeof rootRoute
    }
    '/amazon': {
      id: '/amazon'
      path: '/amazon'
      fullPath: '/amazon'
      preLoaderRoute: typeof AmazonImport
      parentRoute: typeof rootRoute
    }
    '/deals': {
      id: '/deals'
      path: '/deals'
      fullPath: '/deals'
      preLoaderRoute: typeof DealsImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/temu': {
      id: '/temu'
      path: '/temu'
      fullPath: '/temu'
      preLoaderRoute: typeof TemuImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin/init-kv': {
      id: '/admin/init-kv'
      path: '/admin/init-kv'
      fullPath: '/admin/init-kv'
      preLoaderRoute: typeof AdminInitKvImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/affiliate-disclosure': typeof AffiliateDisclosureRoute
  '/aliexpress': typeof AliexpressRoute
  '/amazon': typeof AmazonRoute
  '/deals': typeof DealsRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/temu': typeof TemuRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/init-kv': typeof AdminInitKvRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/affiliate-disclosure': typeof AffiliateDisclosureRoute
  '/aliexpress': typeof AliexpressRoute
  '/amazon': typeof AmazonRoute
  '/deals': typeof DealsRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/temu': typeof TemuRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/init-kv': typeof AdminInitKvRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/affiliate-disclosure': typeof AffiliateDisclosureRoute
  '/aliexpress': typeof AliexpressRoute
  '/amazon': typeof AmazonRoute
  '/deals': typeof DealsRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/temu': typeof TemuRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/init-kv': typeof AdminInitKvRoute
  '/admin/': typeof AdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/affiliate-disclosure'
    | '/aliexpress'
    | '/amazon'
    | '/deals'
    | '/privacy-policy'
    | '/temu'
    | '/admin/dashboard'
    | '/admin/init-kv'
    | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/affiliate-disclosure'
    | '/aliexpress'
    | '/amazon'
    | '/deals'
    | '/privacy-policy'
    | '/temu'
    | '/admin/dashboard'
    | '/admin/init-kv'
    | '/admin'
  id:
    | '__root__'
    | '/'
    | '/affiliate-disclosure'
    | '/aliexpress'
    | '/amazon'
    | '/deals'
    | '/privacy-policy'
    | '/temu'
    | '/admin/dashboard'
    | '/admin/init-kv'
    | '/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AffiliateDisclosureRoute: typeof AffiliateDisclosureRoute
  AliexpressRoute: typeof AliexpressRoute
  AmazonRoute: typeof AmazonRoute
  DealsRoute: typeof DealsRoute
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  TemuRoute: typeof TemuRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminInitKvRoute: typeof AdminInitKvRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AffiliateDisclosureRoute: AffiliateDisclosureRoute,
  AliexpressRoute: AliexpressRoute,
  AmazonRoute: AmazonRoute,
  DealsRoute: DealsRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  TemuRoute: TemuRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminInitKvRoute: AdminInitKvRoute,
  AdminIndexRoute: AdminIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/affiliate-disclosure",
        "/aliexpress",
        "/amazon",
        "/deals",
        "/privacy-policy",
        "/temu",
        "/admin/dashboard",
        "/admin/init-kv",
        "/admin/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/affiliate-disclosure": {
      "filePath": "affiliate-disclosure.tsx"
    },
    "/aliexpress": {
      "filePath": "aliexpress.tsx"
    },
    "/amazon": {
      "filePath": "amazon.tsx"
    },
    "/deals": {
      "filePath": "deals.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.tsx"
    },
    "/temu": {
      "filePath": "temu.tsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx"
    },
    "/admin/init-kv": {
      "filePath": "admin/init-kv.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
